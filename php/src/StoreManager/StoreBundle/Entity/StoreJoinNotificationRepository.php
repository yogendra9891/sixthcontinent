<?php

namespace StoreManager\StoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StoreJoinNotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StoreJoinNotificationRepository extends EntityRepository {

    /**
     * Invite the users to join store
     * @param type $friend_id
     * @param type $store_id
     */
    public function getStoreJoinNotifications_old($user_id) {
        //initialise the array
        $result = array();

        //create the query
        $query = $this->createQueryBuilder('c')
                ->select('c.id as request_id, co.id as store_id, co.email, co.description, co.parentStoreId, co.phone, co.businessName, 
                    co.legalStatus, co.businessType, co.businessCountry, co.businessRegion, co.businessCity, co.businessAddress, co.zip, co.province, co.vatNumber, co.iban, co.mapPlace, co.latitude, co.longitude, co.storeImage, co.isAllowed, 
                 co.isActive, c.createdAt')
                ->innerJoin('StoreManagerStoreBundle:Store', 'co', 'WITH', 'c.storeId = co.id')
                ->where('c.receiverId =:uid')
                ->setParameter('uid', $user_id)
                ->getQuery();

        $results = $query->getResult();
        return $results;
    }
    
    
    /**
     * Invite the users to join store(optimized code)
     * @param type $friend_id
     * @param type $store_id
     */
    public function getStoreJoinNotifications($user_id) {
        //initialise the array
        $result = array();

        //create the query
        $query = $this->createQueryBuilder('c')
                ->select('c.id as request_id, co.id as store_id, co.email, co.description, co.parentStoreId, co.phone, co.businessName, 
                    co.legalStatus, co.businessType, co.businessCountry, co.businessRegion, co.businessCity, co.businessAddress, co.zip, co.province, co.vatNumber, co.iban, co.mapPlace, co.latitude, co.longitude, co.storeImage, co.isAllowed, 
                 co.isActive, c.createdAt,sm.albumId,sm.imageName')
                ->innerJoin('StoreManagerStoreBundle:Store', 'co', 'WITH', 'c.storeId = co.id')
                ->leftJoin('StoreManagerStoreBundle:StoreMedia', 'sm', 'WITH', 'co.storeImage = sm.id')
                ->where('c.receiverId =:uid')
                ->setParameter('uid', $user_id)
                ->getQuery();
        $results = $query->getResult();
        return $results;
    }

}
