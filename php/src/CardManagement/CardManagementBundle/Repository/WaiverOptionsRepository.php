<?php

namespace CardManagement\CardManagementBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * WaiverOptionsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WaiverOptionsRepository extends EntityRepository
{
    /**
     * Check waiver status
     * @param string $waiver_type
     * @param date $entity_date
     */
    public function CheckWaiverStatus($waiver_type, $entity_date)
    {
        $start_time = $entity_date->format('Y-m-d');
        $result = array();
        $qb = $this->createQueryBuilder('wv')
              ->select('wv.id, wv.status')
              ->where('wv.waiverType =:waivertype')  
              ->andWhere('wv.startDate <=:starttime')
              ->andWhere('wv.endDate >:starttime')
              ->andWhere('wv.status =:status')
              ->setParameter('starttime', $start_time)
              ->setParameter('status', 1)
              ->setParameter('waivertype', $waiver_type)
              ->getQuery();  
         $result = $qb->getResult(); //fetch only one row
         if($result){
             return $result[0];
         }
         return $result;
    }
    
    /**
     * Check waiver status
     * @param string $waiver_type
     * @param date $entity_date
     */
    public function CheckWaiverStatusForPaypal($waiver_type)
    {
        $result = array();
        $qb = $this->createQueryBuilder('wv')
              ->where('wv.waiverType =:waivertype') 
              ->andWhere('wv.status  =:status')
              ->andWhere('wv.itemType  =:item_type')
              ->setParameter('waivertype', $waiver_type)
              ->setParameter('status', 1)
                ->setParameter('item_type', 'shop')
              ->getQuery();  
         $result = $qb->getResult(); //fetch only one row
         if($result){
             return $result[0];
         }
         return $result;
    }
}
