<?php

namespace Affiliation\AffiliationManagerBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AffiliationShopRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AffiliationShopRepository extends EntityRepository {
    
    /**
     * find shop affiliated array.
     * @param type $user_id
     * @param type $offset
     * @param type $limit
     * @return array 
     */
    public function findUserAffiliationShops($user_id, $offset, $limit)
    {
        $response = array();
        $qb = $this->createQueryBuilder('c');
        $query = $qb
                ->select('c.shopId')
                ->innerJoin('StoreManagerStoreBundle:Store', 'co', 'WITH', 'c.shopId = co.id')
                ->where('c.fromId =:sfrom','co.isActive =:isactive', 'co.shopStatus =:isactive')
                ->setParameter('sfrom', $user_id)
                ->setParameter('isactive', '1')
                ->setFirstResult($offset)
                ->setMaxResults($limit)
                ->getQuery();

        $response = $query->getResult(); 
        return $response;
    }
    
    /**
     * finding the total count of shop affiliates of a broker
     * @param type $user_id
     * @return int 
     */
    public function findUserAffiliationShopsCount($user_id)
    {
        $qb = $this->createQueryBuilder('c');
        $query = $qb
                ->select('c.shopId')
                ->innerJoin('StoreManagerStoreBundle:Store', 'co', 'WITH', 'c.shopId = co.id')
                ->where('c.fromId =:sfrom','co.isActive =:isactive', 'co.shopStatus =:isactive')
                ->setParameter('sfrom', $user_id)
                ->setParameter('isactive', '1')
                ->getQuery();

        $response_count = count($query->getResult());
        return $response_count;
    }
    
    /**
     *  get store affiliator
     * @param type $store_id
     * @return type
     */
    public function findStoreAffiliator($store_id) {
        $qb = $this->createQueryBuilder('c');
        $query = $qb
                ->select('c.shopId,c.fromId')
                ->where('c.shopId =:shop_id')
                ->setParameter('shop_id', $store_id)
                ->getQuery();

        $response = $query->getResult();
        return $response;
    }
    /**
     * Get shop affiliates
     * @param type $shop_ids
     * @return type
     */
    public function getShopAffiliates($shop_ids)
    {
        $result_res = array();
        $qb = $this->createQueryBuilder('c');
        $query = $qb->select('c.shopId, c.fromId ')
                ->where(
                        $qb->expr()->In('c.shopId', ':s_id')
                )
                ->setParameter('s_id', $shop_ids)
                ->getQuery();
        $result_res = $query->getResult();
        if ($result_res) {
            return $result_res;
        }
        return $result_res;
    }
}
