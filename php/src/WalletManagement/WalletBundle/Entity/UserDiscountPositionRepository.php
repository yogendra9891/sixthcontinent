<?php

namespace WalletManagement\WalletBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserDiscountPositionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserDiscountPositionRepository extends EntityRepository
{
    /**
     * Get Citizen Income
     * @param type $user_id
     * @return array
     */
    public function getCitizenIncome($user_id)
    {
       //initialise the array
        $result = array();
        $result_res = array();
        //create the query
        $query = $this->createQueryBuilder('c');
        $result = $query->select('c.citizenIncome')
                ->where('c.userId =:uid')
                ->setParameter('uid', $user_id)
                ->setFirstResult(0)
                ->setMaxResults(1)
                ->getQuery();

        $result_res = $result->getResult();
        if($result_res){
        return $result_res[0];
        }
        return array();
    }
    
    /**
     * Get citizen discount position
     * @param type $user_id
     * $return array
     */
    public function getCitizenDiscountPositions($user_id)
    {
        //initialise the array
        $result = array();
        $result_res = array();
        //create the query
        $query = $this->createQueryBuilder('c');
        $result = $query->select('c.totalDp, c.balanceDp')
                ->where('c.userId =:uid')
                ->setParameter('uid', $user_id)
                ->setFirstResult(0)
                ->setMaxResults(1)
                ->getQuery();

        $result_res = $result->getResult();
        if($result_res){
        return $result_res[0];
        }
        return array();
    }
    
    /**
     * Update citizen income
     * @param type $user_id
     * @return boolean
     */
    public function UpdateCitizenIncome($user_id, $citizen_income)
    {
        $query = $this->createQueryBuilder('c')
			->update()
			->set('c.citizenIncome', $citizen_income)
			->where('c.userId =:uid')
			->setParameter('uid', $user_id)
			->getQuery();
			$reponse = $query->getResult();
                        return true;
    }
    


}
