<?php

namespace Payment\PaymentDistributionBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SixthContinentIncomeGainRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SixthContinentIncomeGainRepository extends EntityRepository
{
    /**
     * 
     * @param type $shop_id
     * @param type $user_id
     * @param type $amount
     * @return type
     */
    public function assignSixthcontinentCitizen($shop_id, $user_id, $amount,$transaction_id,$is_distributed= 0) {
        
        $sixthcontinent_income_table = $this->getEntityManager()->getClassMetadata('PaymentPaymentDistributionBundle:SixthContinentIncomeGain')->getTableName();
        
        $sql = "INSERT INTO ".$sixthcontinent_income_table."( `purchaser_id`, `income`, `shop_id`,`date`,`transaction_id`,`is_distributed`)
                    VALUES($user_id,$amount,$shop_id,now(),$transaction_id,$is_distributed)";

        $stmt = $this->getEntityManager()
                ->getConnection()
                ->prepare($sql);
        $stmt->execute();
        $result = $stmt->rowCount();
        return $result;
    }
    
    /**
     * mark as distributed done
     * @param type $transaction_id
     * @param type $status
     * @return boolean
     */
    public function updateDistributeSixthcontinent($transaction_id,$status) {
        
         //create the query
        $query = $this->createQueryBuilder('sm')
                  ->update()
                  ->set('sm.isDistributed', '?1')
                  ->where('sm.transactionId = ?2')
                  ->setParameter(1, $status)
                  ->setParameter(2, (int)$transaction_id)
                 ->getQuery();
        $response = $query->getResult();
        return true;
    }
    
    
    /**
     * 
     * @param type $transaction_id
     * @return type
     */
    public function deleteSixthIncomeGain($transaction_id)
    {
        $isDeleted = $this->createQueryBuilder("u")
            ->delete()
            ->where('u.transactionId  = :transaction_id')->setParameter("transaction_id", $transaction_id)            
            ->getQuery()->execute();

        return $isDeleted;
    }
}
