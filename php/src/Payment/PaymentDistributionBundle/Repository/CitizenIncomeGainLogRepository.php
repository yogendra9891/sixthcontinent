<?php

namespace Payment\PaymentDistributionBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CitizenIncomeGainLogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CitizenIncomeGainLogRepository extends EntityRepository
{
    /**
     * 
     * @return type
     */
    public function getYesterdayTransaction() {          
        $next_date      =  new \DateTime('yesterday');
        $end_date       =  $next_date->format('Y-m-d'); //next day date,,
        
        $qb = $this->createQueryBuilder('c');
        $qb->select('c')  
           ->where($qb->expr()->like('c.approvedAt', ':start_at'))
           ->andWhere('c.status =:transaction_status')
           ->setParameter('start_at', $end_date)
           //->setParameter('end_at',$start_date )
           ->setParameter('transaction_status', 0);
        $query    = $qb->getQuery();
        
        $response = $query->getResult();        
        return $response;   
        
    }
    
    /**
     * set cron status
     * @param type $transaction_id
     * @return type
     */
    public function SetStatusForCronStatus($transaction_id,$status,$cron_status) {
        $ci_gain_table = $this->getEntityManager()->getClassMetadata('PaymentPaymentDistributionBundle:CitizenIncomeGainLog')->getTableName();
        $sql = "update $ci_gain_table set status = $status,cron_status = $cron_status where transaction_id = $transaction_id";      
        $stmt = $this->getEntityManager()
                ->getConnection()
                ->prepare($sql);
        $stmt->execute();
        $result = $stmt->rowCount();
        //$result = json_encode($result);
        return $result;
    }
}
