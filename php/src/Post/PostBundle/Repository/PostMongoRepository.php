<?php

namespace Post\PostBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * PostMongoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostMongoRepository extends DocumentRepository
{
    /**
	 * Search posts 
	 * @param string $text
	 * @param int $post_id
	 * @param int $offset
	 * @param int $limit
	 * @return object array
	 */
	 
	public function searchByPostTitleOrOther($group_id,$title,$offset, $limit)
	{
		$qb     = $this->createQueryBuilder('m');
		$result = $qb->field('post_title')->equals(new \MongoRegex('/.*'.$title.'.*/i'))
                        ->field('post_gid')->equals($group_id)
		             ->limit($limit)
		             ->skip($offset)
			         ->getQuery()
			         ->execute()
			         ->toArray(false);
		return $result;
	}
	/**
	 * Search notification messages count
	 * @param string $title
	 * @param int $user_id
	 * @return object array
	 */
	public function searchPostTitleOrOtherCount($title)
	{
		$qb     = $this->createQueryBuilder('m');
		$result = $qb->field('name')->equals(new \MongoRegex('/.*'.$title.'.*/i'))
					 ->hydrate(false)
					 ->getQuery()
					 ->execute()
					 ->toArray(false);
		return count($result);
	}

     /**
     * Edit the club post rate
     * @param type $rate_id
     * @return boolean
     */
    public function editPostRate($rate_id, $arrayPostRate, $post_id) {
        $result = $this->createQueryBuilder('post')
                ->update()
                ->field('id')->equals($post_id)
                ->field('rate.id')->equals($rate_id)
                ->field("rate.$")->set($arrayPostRate)
                ->getQuery()
                ->execute();
        return true;
    }
    
    /**
     * List post for club
     * @param string $gid
     * @param int $limit
     * @param int $offset
     * @param string $last_id
     * @return type
     */
    public function listPosts($gid, $limit, $offset, $last_id = null)
    {
        if(!empty($last_id)){
	    $offset = 0;
	}
            $qb     = $this->createQueryBuilder('club');
            $result = $qb->field('post_gid')->equals($gid)
                          ->field('post_status')->equals(1);
        if (!empty($last_id)) {
             $result = $qb->field('id')->lt($last_id);
        }         
            $result = $qb->sort('post_created','DESC')
                            ->limit($limit)
                            ->skip($offset)
                            ->getQuery()
                            ->execute()
                            ->toArray(false);
           
            return $result;
    }
}