<?php

namespace Transaction\CommercialPromotionBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Transaction\WalletBundle\Entity\AmilonCard;
/**
 * CodePaidRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CodePaidRepository extends EntityRepository {
    
    /**
     *
     * @param \Transaction\CommercialPromotionBundle\Repository\AmilonCard $amilon
     * @param type $userId
     * @return type CodePaid 
     */
    
    public function bookCodePaid(AmilonCard $amilon , $userId) {
        $timeActivationH = new \DateTime("now");
        $coupon_record = $this->getPaidCouponRecord(  $amilon , $userId );

        
        $coupon_record->setTimeActivationH($timeActivationH);
        $coupon_record->setTimeActivation($timeActivationH->getTimestamp());
        $coupon_record->setWalletCitizenID($amilon->getWalletCitizenId());
        $coupon_record->setTrsId($amilon->getSixcTransactionId());
        
        $em = $this->getEntityManager();
        try {
            $em->persist($coupon_record);
            $em->flush();
        } catch (\Exception $ex) {
            
        }
        $amilon->setProductCode($coupon_record->getActivationCode());
        $em->persist($amilon);
        $em->flush();
        //Flash also the Amilon Card
        
        return $amilon;
        
        
    }
    /**
     * Gives one single coupon record
     * @param AmilonCard $amilon
     * @param type $userId
     */
    public function getPaidCouponRecord( AmilonCard $amilon , $userId= null) {

        $qb = $this->createQueryBuilder("b")
                ->select()
                ->where('b.cardId=:cardId and b.offerId = :offerId and b.trsId is NULL ')
                ->setParameter("cardId", $amilon->getAmilonCardId() )
                ->setParameter("offerId", $amilon->getCommercialPromotionId() )
                ->setMaxResults(1)
                ->orderBy("b.id" , "Asc");
        $query = $qb->getQuery();
        $coupon_record = $query->getSingleResult();
        return $coupon_record;
        
    }
   

}
